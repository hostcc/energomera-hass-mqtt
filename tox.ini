[tox]
envlist = py{36,37,38,39}

# Define the minimal tox version required to run;
# if the host tox is less than this the tool with create an environment and
# provision it with a tox that satisfies it under provision_tox_env.
# At least this version is needed for PEP 517/518 support.
minversion = 3.3.0

# Activate isolated build environment. tox will use a virtual environment
# to build a source distribution from the source tree. For build tools and
# arguments use the pyproject.toml file as specified in PEP-517 and PEP-518.
isolated_build = true

[testenv]
deps =
    check-manifest >= 0.42
    flake8
	asynctest
	pylint
	coverage
setenv =
	# Ensure the module under test will be found under `src/` directory, in
	# case of any test command below will attempt importing it. In particular,
	# it helps `coverage` to recognize test traces from the module under `src/`
	# directory and report correct (aligned with repository layout) paths, not
	# from the module installed by `tox` in the virtual environment (the traces
	# will be referencing `tox` specific paths, not aligned with repository)
    PYTHONPATH = src
allowlist_externals =
	cat
commands =
    check-manifest --ignore 'tox.ini,tests/**,docs/**,.pylintrc,.readthedocs.yaml,sonar-project.properties'
    python setup.py check -m -s
    flake8 --tee --output-file=flake8.txt .
    pylint --output-format=parseable --output=pylint.txt src/pyg90alarm
	# Ensure only traces for in-repository module is processed, not for one
	# installed by `tox` (see above for more details)
    coverage run --source=src/pyg90alarm --parallel-mode -m unittest -v tests
commands_post =
	# Show the `pylint` report to the standard output, to ease fixing the issues reported
	cat pylint.txt

[flake8]
exclude = .tox,*.egg,build,data,scripts,docs
select = E,W,F
